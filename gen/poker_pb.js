// @generated by protoc-gen-es v1.3.1
// @generated from file poker.proto (package pokerhero, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message pokerhero.PingRequest
 */
export const PingRequest = proto3.makeMessageType(
  "pokerhero.PingRequest",
  () => [
    { no: 1, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message pokerhero.PongResponse
 */
export const PongResponse = proto3.makeMessageType(
  "pokerhero.PongResponse",
  () => [
    { no: 1, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message pokerhero.Player
 */
export const Player = proto3.makeMessageType(
  "pokerhero.Player",
  () => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "balance", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message pokerhero.CreateRoomRequest
 */
export const CreateRoomRequest = proto3.makeMessageType(
  "pokerhero.CreateRoomRequest",
  () => [
    { no: 1, name: "creator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "big_blind", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "max_players", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message pokerhero.RoomRequest
 */
export const RoomRequest = proto3.makeMessageType(
  "pokerhero.RoomRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message pokerhero.RoomsRequest
 */
export const RoomsRequest = proto3.makeMessageType(
  "pokerhero.RoomsRequest",
  () => [
    { no: 1, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message pokerhero.RoomsResponse
 */
export const RoomsResponse = proto3.makeMessageType(
  "pokerhero.RoomsResponse",
  () => [
    { no: 1, name: "rooms", kind: "message", T: RoomResponse, repeated: true },
  ],
);

/**
 * @generated from message pokerhero.RoomResponse
 */
export const RoomResponse = proto3.makeMessageType(
  "pokerhero.RoomResponse",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "min_buy_in", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "big_blind", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "players", kind: "message", T: Player, repeated: true },
    { no: 5, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "max_players", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message pokerhero.BalanceChange
 */
export const BalanceChange = proto3.makeMessageType(
  "pokerhero.BalanceChange",
  () => [
    { no: 1, name: "player_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "bet", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "win", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message pokerhero.UpdateRoomRequest
 */
export const UpdateRoomRequest = proto3.makeMessageType(
  "pokerhero.UpdateRoomRequest",
  () => [
    { no: 1, name: "room_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "changes", kind: "message", T: BalanceChange, repeated: true },
    { no: 3, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message pokerhero.LeaveRoomRequest
 */
export const LeaveRoomRequest = proto3.makeMessageType(
  "pokerhero.LeaveRoomRequest",
  () => [
    { no: 1, name: "room_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "player_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message pokerhero.AllLeaveRoomRequest
 */
export const AllLeaveRoomRequest = proto3.makeMessageType(
  "pokerhero.AllLeaveRoomRequest",
  () => [
    { no: 1, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message pokerhero.EditRoomRequest
 */
export const EditRoomRequest = proto3.makeMessageType(
  "pokerhero.EditRoomRequest",
  () => [
    { no: 1, name: "room_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "big_blind", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

