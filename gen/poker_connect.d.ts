// @generated by protoc-gen-connect-es v1.0.0-rc1
// @generated from file poker.proto (package pokerhero, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AllLeaveRoomRequest, CreateRoomRequest, EditRoomRequest, LeaveRoomRequest, PingRequest, PongResponse, RoomRequest, RoomResponse, RoomsRequest, RoomsResponse, UpdateRoomRequest } from "./poker_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service pokerhero.Poker
 */
export declare const Poker: {
  readonly typeName: "pokerhero.Poker",
  readonly methods: {
    /**
     * @generated from rpc pokerhero.Poker.Room
     */
    readonly room: {
      readonly name: "Room",
      readonly I: typeof RoomRequest,
      readonly O: typeof RoomResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc pokerhero.Poker.Rooms
     */
    readonly rooms: {
      readonly name: "Rooms",
      readonly I: typeof RoomsRequest,
      readonly O: typeof RoomsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * CreateRoom (protected)
     * 1. Creates room
     * 2. Joins first player
     *
     * @generated from rpc pokerhero.Poker.CreateRoom
     */
    readonly createRoom: {
      readonly name: "CreateRoom",
      readonly I: typeof CreateRoomRequest,
      readonly O: typeof RoomResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateRoom (protected)
     * 1. Updates balances in the room
     *
     * @generated from rpc pokerhero.Poker.UpdateRoom
     */
    readonly updateRoom: {
      readonly name: "UpdateRoom",
      readonly I: typeof UpdateRoomRequest,
      readonly O: typeof RoomResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * LeaveRoom (protected)
     * 1. Pushes player from the room
     * 2. Sends funds back to player
     *
     * @generated from rpc pokerhero.Poker.LeaveRoom
     */
    readonly leaveRoom: {
      readonly name: "LeaveRoom",
      readonly I: typeof LeaveRoomRequest,
      readonly O: typeof RoomResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * AllLeaveRoom (protected)
     * 1. Pushes all player from all the rooms
     * 2. Sends funds back to players
     *
     * @generated from rpc pokerhero.Poker.AllLeaveRoom
     */
    readonly allLeaveRoom: {
      readonly name: "AllLeaveRoom",
      readonly I: typeof AllLeaveRoomRequest,
      readonly O: typeof RoomsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * EditRoom (protected)
     * 1. Changes blinds in the room
     *
     * @generated from rpc pokerhero.Poker.EditRoom
     */
    readonly editRoom: {
      readonly name: "EditRoom",
      readonly I: typeof EditRoomRequest,
      readonly O: typeof RoomResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc pokerhero.Poker.Ping
     */
    readonly ping: {
      readonly name: "Ping",
      readonly I: typeof PingRequest,
      readonly O: typeof PongResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

